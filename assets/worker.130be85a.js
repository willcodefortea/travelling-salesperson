var W=Object.defineProperty;var $=(l,c,t)=>c in l?W(l,c,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[c]=t;var w=(l,c,t)=>($(l,typeof c!="symbol"?c+"":c,t),t);(function(){"use strict";const l=(n,e)=>Math.sqrt((n.x-e.x)**2+(n.y-e.y)**2);class c{constructor(e){w(this,"cities");w(this,"distance");if(this.cities=e,e.length<2)throw new Error("Trips must be at least 2 cities long");this.distance=this.calculateDistance()}calculateDistance(e=l){const s=e(this.cities[0],this.cities[this.cities.length-1]);return this.cities.slice(0,-1).reduce((i,o,u)=>{const p=this.cities[u+1],T=e(o,p);return i+T},s)}objectiveFunction(){return this.distance}}class t{constructor(e,s){w(this,"x");w(this,"y");this.x=e,this.y=s}}const S=[new t(6734,1453),new t(2233,10),new t(5530,1424),new t(401,841),new t(3082,1644),new t(7608,4458),new t(7573,3716),new t(7265,1268),new t(6898,1885),new t(1112,2049),new t(5468,2606),new t(5989,2873),new t(4706,2674),new t(4612,2035),new t(6347,2683),new t(6107,669),new t(7611,5184),new t(7462,3590),new t(7732,4723),new t(5900,3561),new t(4483,3369),new t(6101,1110),new t(5199,2182),new t(1633,2809),new t(4307,2322),new t(675,1006),new t(7555,4819),new t(7541,3981),new t(3177,756),new t(7352,4506),new t(7545,2801),new t(3245,3305),new t(6426,3173),new t(4608,1198),new t(23,2216),new t(7248,3779),new t(7762,4595),new t(7392,2244),new t(3484,2829),new t(6271,2135),new t(4985,140),new t(1916,1569),new t(7280,4899),new t(7509,3239),new t(10,2676),new t(6807,2993),new t(5185,3258),new t(3023,1942)];class a{constructor(e,s){w(this,"cities");w(this,"trip");this.cities=e,this.trip=s}static default(e){return new a(e,new c(e))}copy(){const e=new c([...this.trip.cities]);return new a(this.cities,e)}cost(){return this.trip.objectiveFunction()}swap(e,s){const i=[...this.trip.cities];[i[s],i[e]]=[i[e],i[s]];const o=new c(i);return new a(this.cities,o)}moveSubRoute(e,s,i){let o=[...this.trip.cities];o.splice(s,0,...o.splice(e,i));const u=new c(o);return new a(this.cities,u)}}const R=n=>{const e=[...n];let s=n.length,i=0;for(;s!=0;)i=Math.floor(Math.random()*s),s--,[e[s],e[i]]=[e[i],e[s]];return e},g={apply:n=>{const e=new c(R(n.cities));return new a(n.cities,e)}},h=(n,e=Math.random)=>Math.floor(e()*n),x={apply(n){const e=h(n.cities.length),s=h(n.cities.length);return n.moveSubRoute(e,s,1)}},D={apply(n){const e=h(n.cities.length);let s=n.copy();for(let i=0;i<n.cities.length;i++){const o=n.moveSubRoute(e,i,1);o.cost()<s.cost()&&(s=o)}return s}},v=[{apply(n){let e=n.copy();for(let s=0;s<n.cities.length-1;s++){const i=n.swap(s,s+1);i.cost()<e.cost()&&(e=i)}return e}}],U=()=>v[h(v.length)],A={apply:n=>U().apply(n)};class G{run(e=S,s=g,i,o,u,p=()=>{}){const T=a.default(e);let d=u||s.apply(T);for(;!i();){const N=o.apply(d);N.cost()<d.cost()&&(d=N,p(d))}return d}}const P=n=>{let e=0;return()=>n===e++},I=(n,e=()=>new Date)=>{const s=e();return s.setSeconds(s.getSeconds()+n),()=>e()>=s},C={random:g},b={random:g,randomMover:A,moveCity:x,moveCityToBest:D},L=1e3/60;let f,y="IDLE",m;const M=()=>{m=setTimeout(k,L)},F=()=>{M(),y="RUNNING"},_=()=>{!m||(clearTimeout(m),m=void 0)},O=()=>{_(),y="IDLE"};let r={cities:S,singleLoop:!1,construction:C.random,stoppingCriterion:()=>I(L*.9),mover:b.randomMover,debug:!1},E=0;const j=100,k=()=>{if(y==="IDLE")return;const n=new G().run(r.cities,r.construction,r.stoppingCriterion(),r.mover,f,e=>{f=e,postMessage({type:"SOLUTION",solution:e}),E=0});if(r.singleLoop||E++>j){postMessage({type:"STOPPING",solution:n}),O();return}M()},V=n=>{switch(r.debug&&console.log(`received message ${n.data.type}`),n.data.type){case"SET_SOLUTION":{n.data.solution?f=new a(n.data.solution.cities,new c(n.data.solution.trip.cities)):f=void 0;return}case"START":{F();return}case"STOP":{O();return}case"CONFIGURE":{const{data:{construction:e,move:s,numIterations:i,timeout:o,singleLoop:u,debug:p}}=n;e&&(r.construction=C[e]),s&&(r.mover=b[s]),i&&(r.stoppingCriterion=()=>P(i)),o&&(r.stoppingCriterion=()=>I(o)),u!==void 0&&(r.singleLoop=u),p!==void 0&&(r.debug=p);return}default:console.error(n)}};addEventListener("message",V)})();
